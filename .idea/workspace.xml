<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="47e23e22-2143-451e-81f4-c4a9121a77fa" name="更改" comment="">
      <change afterPath="$PROJECT_DIR$/conftest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/demo/my_class.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/demo/pw_layer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/demo/pw_pytest_fixtrue.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/module/BaiduPage.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/module/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/module/basepage.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/module/creating_applications.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/module/infocloud_login.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pytest.ini" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/testcases/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/testcases/test_baidu.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/testcases/test_creating_applications.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/testcases/test_infocloud_login.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/demo/main.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;ClingMydream&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/ClingMydream/Pw_FrameWorks.git&quot;,
    &quot;accountId&quot;: &quot;f55096df-25dc-4a04-96f0-d90ceee72bdb&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2kHOezuBPMvQS1W7gkKNLgQpJic" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python 测试.Python tests for pw_pytest_fixtrue.test_pw2_action.executor": "Run",
    "Python 测试.Python tests for pw_pytest_fixtrue.test_pw_action.executor": "Debug",
    "Python 测试.Python tests for pw_pytest_fixtrue.test_pw_notification__message.executor": "Debug",
    "Python 测试.Python tests in pw_pytest_fixtrue.py.executor": "Run",
    "Python 测试.Python 测试 (test_baidu.py 内).executor": "Run",
    "Python 测试.Python 测试 (test_creating_applications.py 内).executor": "Run",
    "Python 测试.Python 测试 (test_infocloud_login.py 内).executor": "Run",
    "Python 测试.test_baidu.test_baidu 的 Python 测试.executor": "Run",
    "Python 测试.test_infocloud_login.test_login 的 Python 测试.executor": "Run",
    "Python.conftest.executor": "Run",
    "Python.my_class.executor": "Run",
    "Python.pw_layer.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "D:/Pw_FrameWorks/module",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Pw_FrameWorks\module" />
      <recent name="D:\Pw_FrameWorks\testcases" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Pw_FrameWorks\demo" />
    </key>
  </component>
  <component name="RunManager" selected="Python 测试.Python 测试 (test_creating_applications.py 内)">
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="Pw_FrameWorks" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="D:\Pw_FrameWorks\demo\main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python 测试 (test_baidu.py 内)" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Pw_FrameWorks" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/testcases" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/testcases/test_baidu.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python 测试 (test_creating_applications.py 内)" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Pw_FrameWorks" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/testcases" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/testcases/test_creating_applications.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python 测试 (test_infocloud_login.py 内)" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Pw_FrameWorks" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/testcases" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/testcases/test_infocloud_login.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="test_baidu.test_baidu 的 Python 测试" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Pw_FrameWorks" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/testcases" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_baidu.test_baidu&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="test_infocloud_login.test_login 的 Python 测试" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Pw_FrameWorks" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/testcases" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_infocloud_login.test_login&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python 测试.Python 测试 (test_creating_applications.py 内)" />
        <item itemvalue="Python 测试.Python 测试 (test_infocloud_login.py 内)" />
        <item itemvalue="Python 测试.test_infocloud_login.test_login 的 Python 测试" />
        <item itemvalue="Python 测试.test_baidu.test_baidu 的 Python 测试" />
        <item itemvalue="Python 测试.Python 测试 (test_baidu.py 内)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-PY-241.18034.82" />
        <option value="bundled-python-sdk-975db3bf15a3-2767605e8bc2-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.18034.82" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="47e23e22-2143-451e-81f4-c4a9121a77fa" name="更改" comment="" />
      <created>1722937134191</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1722937134191</updated>
      <workItem from="1722937135432" duration="586000" />
      <workItem from="1722994946140" duration="20165000" />
      <workItem from="1723095319213" duration="6378000" />
      <workItem from="1723104810368" duration="212000" />
      <workItem from="1723105035358" duration="5735000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Pw_FrameWorks$my_class.coverage" NAME="my_class 覆盖结果" MODIFIED="1723097607765" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Pw_FrameWorks$pw_layer.coverage" NAME="pw_layer 覆盖结果" MODIFIED="1723010398071" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Pw_FrameWorks$conftest.coverage" NAME="conftest 覆盖结果" MODIFIED="1723016151024" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/Pw_FrameWorks$.coverage" NAME=" 覆盖结果" MODIFIED="1723110697409" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/testcases" />
  </component>
</project>